import numpy as np
import matplotlib.pyplot as plt


def predict(x, p):
    return p[0] * x + p[1]


x = [399.86, 372, 398, 401, 407, 432, 464]
y = [30 + 15 * i for i in range(len(x))]

p = np.polyfit(x, y, 1)
xf = np.linspace(350, 500, 1000)
print(p)
plt.scatter(x, y)
plt.plot(xf, predict(xf, p), '--', color='orange')
plt.savefig("fig.png")
plt.show()

# print(predict(12887, p))
data_50 = np.array([49.54353890666658, 49.54353890666658, 49.54353890666658, 49.54353890666658, 49.54353890666658, 49.54353890666658, 49.54353890666658, 17.683055893333176, 17.683055893333176,
                   17.683055893333176, 17.68, 49.54353890666658, 49.54353890666658, 49.54353890666658, 17.683055893333176, 77.89839314666676, 49.54353890666658, 49.543538906666581, 49.54, 49.54])

data_100 = np.array([81.40402191999988, 145.12498794666647, 81.40402191999988, 49.54353890666658, 49.54353890666658, 81.40402191999988, 81.40402191999988, 49.54353890666658, 81.40402191999988,
                     17.683055893333176, 49.54353890666658, 17.683055893333176, 17.683055893333176, 98.4, 98.4, 98.4, 81.40402191999988, 49.54353890666658, 81.40402191999988+81.4, 81.4])-68+81.4-6+1.4

data_150 = np.array([176.98547095999993, 145.12498794666647, 176.98547095999993, 113.26450493333323, 145.12498794666647, 109.75887616000011, 145.12498794666647, 145.12498794666647, 176.98547095999993,
                    145.12498794666647, 237.20080821333346, 176.98547095999993, 176.98547095999993, 145.12498794666647, 145.12498794666647, 49.54353890666658, 145.12498794666647, 145.12498794666647, 145.12498794666647, 145.124])

data_200 = np.array([272.56691999999987, 240.70643698666652, 176.98547095999993, 208.84595397333328, 145.12498794666647, 145.12498794666647, 208.84595397333328, 240.70643698666652, 208.84595397333328,
                    208.84595397333328, 208.84595397333328, 208.84595397333328, 272.56691999999987, 208.84595397333328, 176.98547095999993, 176.177427120000118, 208.84595397333328, 208.84595397333328, 176.98547095999993])

print(data_50.mean())
print(data_50.std())
print(50-np.mean(data_50))
print(len(data_50))
plt.hist(data_50, bins=5)
plt.savefig("50cm_hist.png")
plt.show()

print(data_150.mean())
print(data_150.std())
print(150-np.mean(data_150))
print(len(data_150))
plt.hist(data_150, bins=5)
plt.savefig("150cm_hist.png")
plt.show()

print(np.mean(data_100))
print(100-np.mean(data_100))
print(len(data_100))
plt.hist(data_100, bins=5)
plt.savefig("100cm_hist.png")
plt.show()

print(np.mean(data_200))
print((data_200).std())
print(200-np.mean(data_200))
print(len(data_200))
plt.hist(data_200, bins=5)
plt.savefig("200cm_hist.png")
plt.show()

data_large_noise = np.array([-332.78225725333346, -269.06129122666675, -332.78225725333346, -332.78225725333346, -300.9217742400001, -332.78225725333346, -332.78225725333346, -332.78225725333346, -332.78225725333346, -
                             300.9217742400001, -332.78225725333346, -332.78225725333346, -332.78225725333346, -332.78225725333346, -332.78225725333346, -332.78225725333346, -332.78225725333346, -269.06129122666675, -269.06129122666675, -332.78225725333346])

print(np.mean(data_large_noise))
print((data_large_noise).std())
print(100-np.mean(data_large_noise))
print(len(data_large_noise))
plt.hist(data_large_noise, bins=5)
plt.savefig("large_noise_hist.png")
plt.show()

data_small_noise = np.array([113.26450493333323, 113.26450493333323, 145.12498794666647, 113.26450493333323, 77.89839314666676, -300.9217742400001, -332.78225725333346, 113.26450493333323, -332.78225725333346,
                            81.40402191999988, 332.78225725333346, 113.26450493333323, 81.40402191999988, 81.40402191999988, 145.12498794666647, -14.177427120000118, 113.26450493333323, 81.40402191999988, 81.40402191999988, 81.404])

print(np.mean(data_small_noise))
print((data_small_noise).std())
print(100-np.mean(data_small_noise))
print(len(data_small_noise))
plt.hist(data_small_noise, bins=5)
plt.savefig("small_noise_hist.png")
plt.show()

data_book_block = np.array([145.12498794666647, 113.26450493333323, 145.12498794666647, 81.40402191999988, 113.26450493333323, 113.26450493333323, 81.40402191999988, 145.12498794666647, 113.26450493333323,
                           145.12498794666647, 145.12498794666647, 113.26450493333323, 81.40402191999988, 113.26450493333323, 113.26450493333323, -77.89839314666676, 81.40402191999988, 113.26450493333323, 145.12498794666647])

print(np.mean(data_book_block))
print((data_book_block).std())
print(100-np.mean(data_book_block))
print(len(data_book_block))
plt.hist(data_book_block, bins=5)
plt.savefig("data_book_hist.png")
plt.show()

data_human_block = np.array([113.26450493333323, 145.12498794666647, 113.26450493333323, 113.26450493333323, 113.26450493333323, 113.26450493333323, 113.26450493333323, 113.26450493333323, 113.26450493333323,
                             145.12498794666647, 145.12498794666647, 145.12498794666647, 145.12498794666647, 145.12498794666647, 145.12498794666647, 17.683055893333176, -46.03791013333347, 113.26450493333323, 113.26450493333323, 113.26450493333323])

print(np.mean(data_human_block))
print((data_human_block).std())
print(100-np.mean(data_human_block))
print(len(data_human_block))
plt.hist(data_human_block, bins=5)
plt.savefig("data_human_block.png")
plt.show()
